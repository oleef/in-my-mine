{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { configAPI } from \"../configs/api.config\";\nimport axios from \"axios\";\n\nvar queryString = require(\"query-string\");\n\nvar Api = function Api(group, path, params, data) {\n  var endpoint, url, method, obj;\n  return _regeneratorRuntime.async(function Api$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          endpoint = process.env.API_DOMAIN;\n          url = \"\";\n          method = \"\";\n          obj = {};\n          console.log(configAPI);\n          url = \"\".concat(endpoint).concat(configAPI[group][path][\"url\"]);\n          method = \"\".concat(configAPI[group][path][\"method\"]);\n\n          if (method === \"GET\") {\n            obj = {\n              url: url,\n              method: method,\n              params: params\n            }; // params = queryString.stringify(params);\n            // params = params.replace(/\\[\\]/g, \"\");\n            // url = `${url}?${params}`;\n          } else if (method === \"POST\" && typeof params !== \"object\") {\n            obj = {\n              url: \"\".concat(url, \"/\").concat(params),\n              method: method,\n              data: data\n            };\n          }\n\n          console.log(\"obj\", obj);\n          console.log(\"url\", url);\n          console.log(\"method\", method);\n          return _context.abrupt(\"return\", axios(obj).then(function (res) {\n            return res.data;\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Api;","map":null,"metadata":{},"sourceType":"module"}
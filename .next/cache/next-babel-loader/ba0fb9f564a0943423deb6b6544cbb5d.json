{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { configAPI } from \"../configs/api.config\";\nimport axios from \"axios\";\n\nvar queryString = require(\"query-string\");\n\nvar Api = function Api(group, path, params, data) {\n  var endpoint, url, method, obj;\n  return _regeneratorRuntime.async(function Api$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          endpoint = process.env.API_DOMAIN;\n          url = \"\";\n          method = \"\";\n          obj = {};\n          console.log(configAPI);\n          url = \"\".concat(endpoint).concat(configAPI[group][path][\"url\"]);\n          method = \"\".concat(configAPI[group][path][\"method\"]);\n\n          if (method === \"GET\") {\n            obj = {\n              url: url,\n              method: method,\n              params: params\n            }; // params = queryString.stringify(params);\n            // params = params.replace(/\\[\\]/g, \"\");\n            // url = `${url}?${params}`;\n          } else if (method === \"POST\" && typeof params !== \"object\") {\n            obj = {\n              url: \"\".concat(url, \"/\").concat(params),\n              method: method,\n              data: data\n            };\n          }\n\n          console.log(\"obj\", obj);\n          console.log(\"url\", url);\n          console.log(\"method\", method);\n          return _context.abrupt(\"return\", axios(obj).then(function (res) {\n            return res.data;\n          }));\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Api;","map":{"version":3,"sources":["/Users/atfirstbyte/Documents/react/in-my-mine/libs/api.js"],"names":["configAPI","axios","queryString","require","Api","group","path","params","data","endpoint","process","env","API_DOMAIN","url","method","obj","console","log","then","res"],"mappings":";AAAA,SAASA,SAAT,QAA0B,uBAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAOC,KAAP,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACJC,UAAAA,QADI,GACOC,OAAO,CAACC,GAAR,CAAYC,UADnB;AAENC,UAAAA,GAFM,GAEA,EAFA;AAGNC,UAAAA,MAHM,GAGG,EAHH;AAINC,UAAAA,GAJM,GAIA,EAJA;AAKVC,UAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;AACAa,UAAAA,GAAG,aAAMJ,QAAN,SAAiBT,SAAS,CAACK,KAAD,CAAT,CAAiBC,IAAjB,EAAuB,KAAvB,CAAjB,CAAH;AACAQ,UAAAA,MAAM,aAAMd,SAAS,CAACK,KAAD,CAAT,CAAiBC,IAAjB,EAAuB,QAAvB,CAAN,CAAN;;AACA,cAAIQ,MAAM,KAAK,KAAf,EAAsB;AACpBC,YAAAA,GAAG,GAAG;AACJF,cAAAA,GAAG,EAAHA,GADI;AAEJC,cAAAA,MAAM,EAANA,MAFI;AAGJP,cAAAA,MAAM,EAANA;AAHI,aAAN,CADoB,CAMpB;AACA;AACA;AACD,WATD,MASO,IAAIO,MAAM,KAAK,MAAX,IAAqB,OAAOP,MAAP,KAAkB,QAA3C,EAAqD;AAC1DQ,YAAAA,GAAG,GAAG;AACJF,cAAAA,GAAG,YAAKA,GAAL,cAAYN,MAAZ,CADC;AAEJO,cAAAA,MAAM,EAANA,MAFI;AAGJN,cAAAA,IAAI,EAAJA;AAHI,aAAN;AAKD;;AACDQ,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBJ,GAAnB;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;AA1BU,2CA2BHb,KAAK,CAACc,GAAD,CAAL,CAAWG,IAAX,CAAgB,UAAAC,GAAG,EAAI;AAC5B,mBAAOA,GAAG,CAACX,IAAX;AACD,WAFM,CA3BG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAZ;;AAgCA,eAAeJ,GAAf","sourcesContent":["import { configAPI } from \"../configs/api.config\";\n\nimport axios from \"axios\";\nconst queryString = require(\"query-string\");\n\nconst Api = async (group, path, params, data) => {\n  const endpoint = process.env.API_DOMAIN;\n  let url = \"\";\n  let method = \"\";\n  let obj = {};\n  console.log(configAPI);\n  url = `${endpoint}${configAPI[group][path][\"url\"]}`;\n  method = `${configAPI[group][path][\"method\"]}`;\n  if (method === \"GET\") {\n    obj = {\n      url,\n      method,\n      params\n    };\n    // params = queryString.stringify(params);\n    // params = params.replace(/\\[\\]/g, \"\");\n    // url = `${url}?${params}`;\n  } else if (method === \"POST\" && typeof params !== \"object\") {\n    obj = {\n      url: `${url}/${params}`,\n      method,\n      data\n    };\n  }\n  console.log(\"obj\", obj);\n  console.log(\"url\", url);\n  console.log(\"method\", method);\n  return axios(obj).then(res => {\n    return res.data;\n  });\n};\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}